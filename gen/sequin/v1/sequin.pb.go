// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: sequin/v1/sequin.proto

package sequinv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	longrunningpb "cloud.google.com/go/longrunning/autogen/longrunningpb"
	_ "google.golang.org/genproto/googleapis/rpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExecRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Op *Operation `protobuf:"bytes,1,opt,name=op,proto3" json:"op,omitempty"`
}

func (x *ExecRequest) Reset() {
	*x = ExecRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sequin_v1_sequin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecRequest) ProtoMessage() {}

func (x *ExecRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sequin_v1_sequin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecRequest.ProtoReflect.Descriptor instead.
func (*ExecRequest) Descriptor() ([]byte, []int) {
	return file_sequin_v1_sequin_proto_rawDescGZIP(), []int{0}
}

func (x *ExecRequest) GetOp() *Operation {
	if x != nil {
		return x.Op
	}
	return nil
}

type StartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Op *Operation `protobuf:"bytes,1,opt,name=op,proto3" json:"op,omitempty"`
}

func (x *StartRequest) Reset() {
	*x = StartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sequin_v1_sequin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartRequest) ProtoMessage() {}

func (x *StartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sequin_v1_sequin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartRequest.ProtoReflect.Descriptor instead.
func (*StartRequest) Descriptor() ([]byte, []int) {
	return file_sequin_v1_sequin_proto_rawDescGZIP(), []int{1}
}

func (x *StartRequest) GetOp() *Operation {
	if x != nil {
		return x.Op
	}
	return nil
}

type Operation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId string     `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Detail    *anypb.Any `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (x *Operation) Reset() {
	*x = Operation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sequin_v1_sequin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operation) ProtoMessage() {}

func (x *Operation) ProtoReflect() protoreflect.Message {
	mi := &file_sequin_v1_sequin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operation.ProtoReflect.Descriptor instead.
func (*Operation) Descriptor() ([]byte, []int) {
	return file_sequin_v1_sequin_proto_rawDescGZIP(), []int{2}
}

func (x *Operation) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *Operation) GetDetail() *anypb.Any {
	if x != nil {
		return x.Detail
	}
	return nil
}

type OperationResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateId int64        `protobuf:"varint,1,opt,name=update_id,json=updateId,proto3" json:"update_id,omitempty"`
	Results  []*anypb.Any `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *OperationResult) Reset() {
	*x = OperationResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sequin_v1_sequin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationResult) ProtoMessage() {}

func (x *OperationResult) ProtoReflect() protoreflect.Message {
	mi := &file_sequin_v1_sequin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationResult.ProtoReflect.Descriptor instead.
func (*OperationResult) Descriptor() ([]byte, []int) {
	return file_sequin_v1_sequin_proto_rawDescGZIP(), []int{3}
}

func (x *OperationResult) GetUpdateId() int64 {
	if x != nil {
		return x.UpdateId
	}
	return 0
}

func (x *OperationResult) GetResults() []*anypb.Any {
	if x != nil {
		return x.Results
	}
	return nil
}

type OperationState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateId   int64             `protobuf:"varint,1,opt,name=update_id,json=updateId,proto3" json:"update_id,omitempty"`
	Checkpoint map[string][]byte `protobuf:"bytes,2,rep,name=checkpoint,proto3" json:"checkpoint,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Done       bool              `protobuf:"varint,3,opt,name=done,proto3" json:"done,omitempty"`
}

func (x *OperationState) Reset() {
	*x = OperationState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sequin_v1_sequin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationState) ProtoMessage() {}

func (x *OperationState) ProtoReflect() protoreflect.Message {
	mi := &file_sequin_v1_sequin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationState.ProtoReflect.Descriptor instead.
func (*OperationState) Descriptor() ([]byte, []int) {
	return file_sequin_v1_sequin_proto_rawDescGZIP(), []int{4}
}

func (x *OperationState) GetUpdateId() int64 {
	if x != nil {
		return x.UpdateId
	}
	return 0
}

func (x *OperationState) GetState() map[string][]byte {
	if x != nil {
		return x.Checkpoint
	}
	return nil
}

func (x *OperationState) GetDone() bool {
	if x != nil {
		return x.Done
	}
	return false
}

type StartResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StartResponse) Reset() {
	*x = StartResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sequin_v1_sequin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartResponse) ProtoMessage() {}

func (x *StartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sequin_v1_sequin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartResponse.ProtoReflect.Descriptor instead.
func (*StartResponse) Descriptor() ([]byte, []int) {
	return file_sequin_v1_sequin_proto_rawDescGZIP(), []int{5}
}

type GetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// LastUpdateId is the last update ID received by the client from a GetResponse.
	// If provided, the server will block until there is a new update.
	// This changes the behavior of Get to be a long-polling operation.
	LastUpdateId int64           `protobuf:"varint,2,opt,name=last_update_id,json=lastUpdateId,proto3" json:"last_update_id,omitempty"`
	Checkpoint   *OperationState `protobuf:"bytes,3,opt,name=checkpoint,proto3" json:"checkpoint,omitempty"`
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sequin_v1_sequin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sequin_v1_sequin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_sequin_v1_sequin_proto_rawDescGZIP(), []int{6}
}

func (x *GetRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *GetRequest) GetLastUpdateId() int64 {
	if x != nil {
		return x.LastUpdateId
	}
	return 0
}

func (x *GetRequest) GetState() *OperationState {
	if x != nil {
		return x.Checkpoint
	}
	return nil
}

type GetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *OperationResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GetResponse) Reset() {
	*x = GetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sequin_v1_sequin_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponse) ProtoMessage() {}

func (x *GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sequin_v1_sequin_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponse.ProtoReflect.Descriptor instead.
func (*GetResponse) Descriptor() ([]byte, []int) {
	return file_sequin_v1_sequin_proto_rawDescGZIP(), []int{7}
}

func (x *GetResponse) GetResult() *OperationResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type FuncOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Args [][]byte `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
}

func (x *FuncOperation) Reset() {
	*x = FuncOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sequin_v1_sequin_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FuncOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FuncOperation) ProtoMessage() {}

func (x *FuncOperation) ProtoReflect() protoreflect.Message {
	mi := &file_sequin_v1_sequin_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FuncOperation.ProtoReflect.Descriptor instead.
func (*FuncOperation) Descriptor() ([]byte, []int) {
	return file_sequin_v1_sequin_proto_rawDescGZIP(), []int{8}
}

func (x *FuncOperation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FuncOperation) GetArgs() [][]byte {
	if x != nil {
		return x.Args
	}
	return nil
}

type ExecResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *OperationResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ExecResponse) Reset() {
	*x = ExecResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sequin_v1_sequin_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecResponse) ProtoMessage() {}

func (x *ExecResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sequin_v1_sequin_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecResponse.ProtoReflect.Descriptor instead.
func (*ExecResponse) Descriptor() ([]byte, []int) {
	return file_sequin_v1_sequin_proto_rawDescGZIP(), []int{9}
}

func (x *ExecResponse) GetResult() *OperationResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type RunMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubmittedAt   *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=submitted_at,json=submittedAt,proto3" json:"submitted_at,omitempty"`
	StartedAt     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	FinishedAt    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=finished_at,json=finishedAt,proto3" json:"finished_at,omitempty"`
	ServerVersion string                 `protobuf:"bytes,4,opt,name=server_version,json=serverVersion,proto3" json:"server_version,omitempty"`
}

func (x *RunMetadata) Reset() {
	*x = RunMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sequin_v1_sequin_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunMetadata) ProtoMessage() {}

func (x *RunMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_sequin_v1_sequin_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunMetadata.ProtoReflect.Descriptor instead.
func (*RunMetadata) Descriptor() ([]byte, []int) {
	return file_sequin_v1_sequin_proto_rawDescGZIP(), []int{10}
}

func (x *RunMetadata) GetSubmittedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.SubmittedAt
	}
	return nil
}

func (x *RunMetadata) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *RunMetadata) GetFinishedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.FinishedAt
	}
	return nil
}

func (x *RunMetadata) GetServerVersion() string {
	if x != nil {
		return x.ServerVersion
	}
	return ""
}

var File_sequin_v1_sequin_proto protoreflect.FileDescriptor

var file_sequin_v1_sequin_proto_rawDesc = []byte{
	0x0a, 0x16, 0x73, 0x65, 0x71, 0x75, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x71, 0x75,
	0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x61, 0x72, 0x67, 0x30, 0x6e, 0x65,
	0x74, 0x2e, 0x73, 0x65, 0x71, 0x75, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x19, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x72, 0x70, 0x63, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x23, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e,
	0x6e, 0x69, 0x6e, 0x67, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x3b, 0x0a, 0x0b, 0x45, 0x78, 0x65, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2c, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x61, 0x72, 0x67, 0x30, 0x6e, 0x65, 0x74, 0x2e, 0x73, 0x65, 0x71, 0x75, 0x69, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x02, 0x6f, 0x70, 0x22,
	0x3c, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2c, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x72,
	0x67, 0x30, 0x6e, 0x65, 0x74, 0x2e, 0x73, 0x65, 0x71, 0x75, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x02, 0x6f, 0x70, 0x22, 0x61, 0x0a,
	0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0a, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xba, 0x48, 0x04, 0x72, 0x02, 0x18, 0x50, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x12, 0x2c, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x22, 0x5e, 0x0a, 0x0f, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x64,
	0x12, 0x2e, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x22, 0xd3, 0x01, 0x0a, 0x0e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x64,
	0x12, 0x51, 0x0a, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x61, 0x72, 0x67, 0x30, 0x6e, 0x65, 0x74, 0x2e, 0x73,
	0x65, 0x71, 0x75, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x1a, 0x3d, 0x0a, 0x0f, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x0f, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x9d, 0x01, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72,
	0x02, 0x18, 0x50, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x24,
	0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x72, 0x67, 0x30, 0x6e,
	0x65, 0x74, 0x2e, 0x73, 0x65, 0x71, 0x75, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0a, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x49, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x72, 0x67, 0x30, 0x6e, 0x65, 0x74,
	0x2e, 0x73, 0x65, 0x71, 0x75, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x40, 0x0a, 0x0d, 0x46, 0x75, 0x6e, 0x63, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x04,
	0x61, 0x72, 0x67, 0x73, 0x22, 0x4a, 0x0a, 0x0c, 0x45, 0x78, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x72, 0x67, 0x30, 0x6e, 0x65, 0x74, 0x2e, 0x73,
	0x65, 0x71, 0x75, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0xeb, 0x01, 0x0a, 0x0b, 0x52, 0x75, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x3d, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x66, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x66, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x65, 0x64, 0x41, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x32, 0x8a,
	0x02, 0x0a, 0x0d, 0x53, 0x65, 0x71, 0x75, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x4a, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x1f, 0x2e, 0x61, 0x72, 0x67, 0x30,
	0x6e, 0x65, 0x74, 0x2e, 0x73, 0x65, 0x71, 0x75, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x61, 0x72, 0x67,
	0x30, 0x6e, 0x65, 0x74, 0x2e, 0x73, 0x65, 0x71, 0x75, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x03,
	0x47, 0x65, 0x74, 0x12, 0x1d, 0x2e, 0x61, 0x72, 0x67, 0x30, 0x6e, 0x65, 0x74, 0x2e, 0x73, 0x65,
	0x71, 0x75, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x72, 0x67, 0x30, 0x6e, 0x65, 0x74, 0x2e, 0x73, 0x65, 0x71,
	0x75, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x67, 0x0a, 0x04, 0x45, 0x78, 0x65, 0x63, 0x12, 0x1e, 0x2e, 0x61, 0x72, 0x67,
	0x30, 0x6e, 0x65, 0x74, 0x2e, 0x73, 0x65, 0x71, 0x75, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x78, 0x65, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x1e, 0xca, 0x41, 0x1b, 0x0a, 0x0c,
	0x45, 0x78, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0b, 0x52, 0x75,
	0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x30, 0x01, 0x42, 0xbb, 0x01, 0x0a, 0x15,
	0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x30, 0x6e, 0x65, 0x74, 0x2e, 0x73, 0x65, 0x71, 0x75,
	0x69, 0x6e, 0x2e, 0x76, 0x31, 0x42, 0x0b, 0x53, 0x65, 0x71, 0x75, 0x69, 0x6e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x76, 0x67, 0x6f, 0x75, 0x67, 0x68, 0x2f, 0x73, 0x65, 0x71, 0x75, 0x69, 0x6e, 0x2f, 0x67,
	0x65, 0x6e, 0x2f, 0x73, 0x65, 0x71, 0x75, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x3b, 0x73, 0x65, 0x71,
	0x75, 0x69, 0x6e, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x41, 0x53, 0x58, 0xaa, 0x02, 0x11, 0x41, 0x72,
	0x67, 0x30, 0x6e, 0x65, 0x74, 0x2e, 0x53, 0x65, 0x71, 0x75, 0x69, 0x6e, 0x2e, 0x56, 0x31, 0xca,
	0x02, 0x11, 0x41, 0x72, 0x67, 0x30, 0x6e, 0x65, 0x74, 0x5c, 0x53, 0x65, 0x71, 0x75, 0x69, 0x6e,
	0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1d, 0x41, 0x72, 0x67, 0x30, 0x6e, 0x65, 0x74, 0x5c, 0x53, 0x65,
	0x71, 0x75, 0x69, 0x6e, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0xea, 0x02, 0x13, 0x41, 0x72, 0x67, 0x30, 0x6e, 0x65, 0x74, 0x3a, 0x3a, 0x53,
	0x65, 0x71, 0x75, 0x69, 0x6e, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_sequin_v1_sequin_proto_rawDescOnce sync.Once
	file_sequin_v1_sequin_proto_rawDescData = file_sequin_v1_sequin_proto_rawDesc
)

func file_sequin_v1_sequin_proto_rawDescGZIP() []byte {
	file_sequin_v1_sequin_proto_rawDescOnce.Do(func() {
		file_sequin_v1_sequin_proto_rawDescData = protoimpl.X.CompressGZIP(file_sequin_v1_sequin_proto_rawDescData)
	})
	return file_sequin_v1_sequin_proto_rawDescData
}

var file_sequin_v1_sequin_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_sequin_v1_sequin_proto_goTypes = []any{
	(*ExecRequest)(nil),             // 0: arg0net.sequin.v1.ExecRequest
	(*StartRequest)(nil),            // 1: arg0net.sequin.v1.StartRequest
	(*Operation)(nil),               // 2: arg0net.sequin.v1.Operation
	(*OperationResult)(nil),         // 3: arg0net.sequin.v1.OperationResult
	(*OperationState)(nil),          // 4: arg0net.sequin.v1.OperationState
	(*StartResponse)(nil),           // 5: arg0net.sequin.v1.StartResponse
	(*GetRequest)(nil),              // 6: arg0net.sequin.v1.GetRequest
	(*GetResponse)(nil),             // 7: arg0net.sequin.v1.GetResponse
	(*FuncOperation)(nil),           // 8: arg0net.sequin.v1.FuncOperation
	(*ExecResponse)(nil),            // 9: arg0net.sequin.v1.ExecResponse
	(*RunMetadata)(nil),             // 10: arg0net.sequin.v1.RunMetadata
	nil,                             // 11: arg0net.sequin.v1.OperationState.CheckpointEntry
	(*anypb.Any)(nil),               // 12: google.protobuf.Any
	(*timestamppb.Timestamp)(nil),   // 13: google.protobuf.Timestamp
	(*longrunningpb.Operation)(nil), // 14: google.longrunning.Operation
}
var file_sequin_v1_sequin_proto_depIdxs = []int32{
	2,  // 0: arg0net.sequin.v1.ExecRequest.op:type_name -> arg0net.sequin.v1.Operation
	2,  // 1: arg0net.sequin.v1.StartRequest.op:type_name -> arg0net.sequin.v1.Operation
	12, // 2: arg0net.sequin.v1.Operation.detail:type_name -> google.protobuf.Any
	12, // 3: arg0net.sequin.v1.OperationResult.results:type_name -> google.protobuf.Any
	11, // 4: arg0net.sequin.v1.OperationState.checkpoint:type_name -> arg0net.sequin.v1.OperationState.CheckpointEntry
	4,  // 5: arg0net.sequin.v1.GetRequest.checkpoint:type_name -> arg0net.sequin.v1.OperationState
	3,  // 6: arg0net.sequin.v1.GetResponse.result:type_name -> arg0net.sequin.v1.OperationResult
	3,  // 7: arg0net.sequin.v1.ExecResponse.result:type_name -> arg0net.sequin.v1.OperationResult
	13, // 8: arg0net.sequin.v1.RunMetadata.submitted_at:type_name -> google.protobuf.Timestamp
	13, // 9: arg0net.sequin.v1.RunMetadata.started_at:type_name -> google.protobuf.Timestamp
	13, // 10: arg0net.sequin.v1.RunMetadata.finished_at:type_name -> google.protobuf.Timestamp
	1,  // 11: arg0net.sequin.v1.SequinService.Start:input_type -> arg0net.sequin.v1.StartRequest
	6,  // 12: arg0net.sequin.v1.SequinService.Get:input_type -> arg0net.sequin.v1.GetRequest
	0,  // 13: arg0net.sequin.v1.SequinService.Exec:input_type -> arg0net.sequin.v1.ExecRequest
	5,  // 14: arg0net.sequin.v1.SequinService.Start:output_type -> arg0net.sequin.v1.StartResponse
	7,  // 15: arg0net.sequin.v1.SequinService.Get:output_type -> arg0net.sequin.v1.GetResponse
	14, // 16: arg0net.sequin.v1.SequinService.Exec:output_type -> google.longrunning.Operation
	14, // [14:17] is the sub-list for method output_type
	11, // [11:14] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_sequin_v1_sequin_proto_init() }
func file_sequin_v1_sequin_proto_init() {
	if File_sequin_v1_sequin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sequin_v1_sequin_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ExecRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sequin_v1_sequin_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*StartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sequin_v1_sequin_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Operation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sequin_v1_sequin_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*OperationResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sequin_v1_sequin_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*OperationState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sequin_v1_sequin_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*StartResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sequin_v1_sequin_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sequin_v1_sequin_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sequin_v1_sequin_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*FuncOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sequin_v1_sequin_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*ExecResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sequin_v1_sequin_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*RunMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sequin_v1_sequin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sequin_v1_sequin_proto_goTypes,
		DependencyIndexes: file_sequin_v1_sequin_proto_depIdxs,
		MessageInfos:      file_sequin_v1_sequin_proto_msgTypes,
	}.Build()
	File_sequin_v1_sequin_proto = out.File
	file_sequin_v1_sequin_proto_rawDesc = nil
	file_sequin_v1_sequin_proto_goTypes = nil
	file_sequin_v1_sequin_proto_depIdxs = nil
}
